@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../abstracts/mixins" as *;
@use "../../base/functions" as func;

.comment-block {
  position: relative;
  @include flex(row, space-between);
  gap: calc(v.$block-inner-space * 1.5);
  padding: calc(v.$block-inner-space * 1.5);
  background: c.$white;
  border-radius: v.$block-border-radius;
  @media (width <= func.rem(768)) {
    position: relative;
    @include flex(column-reverse, flex-start, flex-start);
  }

  &__text-container {
    flex-grow: 1;
    width: 100%;
    @include flex(column);
    gap: v.$block-inner-space;
  }

  &__comment-text {
    color: c.$grayish-blue;
    line-height: 1.4em;
  }

  &__replyingTo-text {
    color: c.$moderate-blue;
    font-weight: 500;
  }

  &__warning-info {
    position: absolute;
    z-index: 10;
    font-size: 0.75rem;
    border: 1px solid c.$pale-red;
    border-radius: v.$block-border-radius;
    color: c.$soft-red;
    animation: fadeOut 1s ease-out 1.5s forwards;
    @media (width > func.rem(768)) {
      top: 0;
      translate: -125% -50%;
    }
    @media (width <= func.rem(768)) {
      bottom: 0;
      translate: -80% -175%;
    }
    @media (width <= func.rem(600)) {
      translate: -50% -175%;
    }
    @media (width <= func.rem(450)) {
      translate: -30% -175%;
    }
  }

  &__textarea-wrapper {
    @include flex(column, flex-start, flex-end);
    gap: v.$block-inner-space;
  }

  &__textarea {
    width: 100%;
    resize: none;
    padding-block: calc(v.$block-inner-space * 0.75);
    padding-inline: v.$block-inner-space;
    outline: none;
    border-color: c.$moderate-blue;
    border-radius: v.$block-border-radius;
    font: inherit;
    line-height: 1.5em;
    color: c.$dark-blue;

    &--update-comment::placeholder {
      color: c.$soft-red;
    }
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
